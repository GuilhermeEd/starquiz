{"version":3,"sources":["assets/star-wars-intro.mp3","store/createReducer.js","store/game/constants.js","store/game/reducers.js","store/characters/constants.js","store/characters/reducers.js","store/game/actions.js","store/game/sagas.js","store/characters/actions.js","utils/http.js","utils/cse.js","utils/httpHelpers.js","store/characters/services.js","store/characters/sagas.js","store/index.js","store/config.js","serviceWorker.js","routes/history.js","components/header/styles/Header.styles.js","components/header/Header.js","components/modal/styles/Modal.styles.js","components/modal/CharacterModal.js","components/input/styles/Input.styles.js","components/input/SearchInput.js","components/card/styles/Card.styles.js","components/card/CharacterCard.js","components/list/styles/List.styles.js","components/list/CharacterList.js","utils/constants.js","components/button/styles/Button.styles.js","components/button/SubmitButton.js","components/modal/RulesModal.js","utils/validate.js","utils/yup.js","components/input/ValidatedSharedInput.js","components/input/NameInput.js","components/input/EmailInput.js","components/form/styles/Form.styles.js","components/form/ScoreForm.js","components/table/styles/Table.styles.js","components/table/ScoreTable.js","components/modal/ScoreModal.js","pages/styles/Page.styles.js","pages/HomePage.js","components/crawl/styles/Crawl.styles.js","components/crawl/StarWarsCrawl.js","components/title/styles/Title.styles.js","components/title/OpeningTitle.js","components/button/SkipButton.js","pages/PublicPage.js","routes/paths.js","routes/Routes.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","createReducer","initialState","handleActions","Error","Object","prototype","toString","call","state","arguments","length","undefined","action","hasOwnProperty","type","START_GAME","SAVE_SCORE","GET_SCORES","gameStarted","gameFinished","scoreSaved","time","score","scores","gameInfo","_createReducer","defineProperty","objectSpread","payload","error","FETCH_CHARACTERS","FETCH_CHARACTER","item","items","page","loading","reducers_createReducer","startGame","stopGame","setTime","setScore","saveScore","saveScoreSuccess","saveScoreFailure","getScores","getScoresSuccess","getScoresFailure","watchStartGame","watchSaveScore","watchGetScores","countdown","secs","eventChannel","emitter","iv","setInterval","END","clearInterval","_ref","channel","regenerator_default","a","wrap","_context2","prev","next","select","game","sent","takeEvery","mark","_callee","_context","put","actions","stop","_marked","_ref2","newScores","_context3","JSON","parse","localStorage","getItem","concat","toConsumableArray","setItem","stringify","message_default","success","t0","_marked2","_ref3","_context4","_marked3","_context5","takeLatest","types","_marked4","_context6","_marked5","_context7","_marked6","_callee2","_context8","all","_marked7","fetchCharacters","fetchCharactersSuccess","characters","fetchCharactersFailure","fetchCharacter","url","fetchCharacterSuccess","character","fetchCharacterFailure","apiHosts","production","staging","demo","development","apiHost","instance","axios","create","baseURL","process","NODE_ENV","GOOGLE_CX_ID","GOOGLE_API_KEY","defaults","params","key","cx","searchType","start","num","mapImages","res","data","map","link","height","image","width","getRandomImage","images","Math","floor","random","getData","http","get","then","_len","props","Array","_key","results","entries","filter","slicedToArray","includes","forEach","_ref4","prop","value","mapPropsToData","populateCharacterRelationships","Promise","isArray","rel","relationship","rels","populateCharacterImage","q","name","cse","watchFetchCharacters","watchFetchCharacter","oldCharacters","newCharacters","i","services","keys","isNaN","abrupt","sagas_marked","characterWithRelationships","find","sagas_marked2","sagas_marked3","sagas_marked4","sagas_callee","sagas_marked5","rootSaga","rootReducer","combineReducers","gameReducers","charactersReducers","gameSagas","charactersSagas","store_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","run","Boolean","location","hostname","match","createHistory","basename","headerStyle","styles","groupStyle","titleStyle","scoreStyle","timeStyle","StyledHeader","core_browser_esm","assign","css","Group","Title","children","Score","Time","Header","react_default","createElement","Header_styles_StyledHeader","Header_styles_Group","Header_styles_Title","Header_styles_Score","icon_default","Header_styles_Time","minutes","seconds","formattedSeconds","formatTime","defaultProps","modalStyle","imageStyle","itemStyle","itemLabelStyle","StyledModal","modal_default","Image","src","alt","Item","label","CharacterModal","_Component","_getPrototypeOf2","_this","classCallCheck","this","args","possibleConstructorReturn","getPrototypeOf","apply","getProp","get_default","spin_default","size","mapArrayProps","arr","join","inherits","createClass","prevProps","_this$props","visible","_this$props2","toggle","button","Modal_styles_StyledModal","title","onCancel","footer","Modal_styles_Group","Modal_styles_Image","Modal_styles_Item","Component","connect","dispatch","bindActionCreators","inputStyle","searchInputStyle","StyledSearchInput","SearchInput","input","handleChange","setState","handleSearch","onSearch","Input_styles_StyledSearchInput","form_default","hasFeedback","help","validateStatus","input_default","Search","ref","onChange","disabled","placeholder","enterButton","React","forwardRef","SearchInput_SearchInput","cardStyle","characterCardStyle","StyledCharacterCard","card_default","CharacterCard","isModalVisible","characterScore","majorScore","popoverInput","createRef","modalInput","renderImage","assertThisInitialized","Card_styles_Image","onClick","toggleModal","renderInput","input_SearchInput","focusInput","setTimeout","current","focus","formatted","trim","toLowerCase","replace","handleSuccess","handleFailure","prevState","minorScore","_this2","spinning","Card_styles_StyledCharacterCard","bordered","popover_default","trigger","content","onVisibleChange","button_default","icon","modal_CharacterModal","listStyle","characterListStyle","loadingStyle","StyledCharacterList","Loading","CharacterList","fetch","hasMore","count","List_styles_StyledCharacterList","react_infinite_scroller_default","pageStart","loadMore","useWindow","list_default","locale","emptyText","dataSource","split","grid","gutter","xs","sm","md","lg","renderItem","card_CharacterCard","List_styles_Loading","RULES","buttonStyle","skipButtonStyle","submitButtonStyle","StyledSkipButton","Link","to","StyledSubmitButton","SubmitButton","Button_styles_StyledSubmitButton","htmlType","RulesModal","delegate","onOk","closable","maskClosable","button_SubmitButton","rule","validate","test","yup","mixed","notType","string","email","fieldHasError","touched","ValidatedSharedInput","className","NameInput","field","form","input_ValidatedSharedInput","errors","prefix","style","color","autoComplete","EmailInput","formStyle","StyledForm","formik_esm","ScoreForm","isValid","hasError","values","Form_styles_StyledForm","component","onSubmit","enhance","withFormik","validationSchema","object","shape","required","handleSubmit","formikBag","_formikBag$props","submitValues","tableStyle","hide","scoreTableStyle","StyledScoreTable","table_default","ScoreTable","getColumns","dataIndex","Table_styles_StyledScoreTable","columns","ScoreModal","savedScore","_this$state","tabs_default","activeKey","TabPane","tab","form_ScoreForm","table_ScoreTable","pageStyle","StyledHomePage","blur","HomePage","Page_styles_StyledHomePage","header_Header","list_CharacterList","scrollParentRef","modal_RulesModal","modal_ScoreModal","containerStyle","fadeStyle","crawlAnimation","keyframes","_templateObject","Container","Fade","Crawl","duration","StarWarsCrawl","Fragment","Crawl_styles_Fade","Crawl_styles_Container","Crawl_styles_Crawl","Crawl_styles_Title","openingTitleAnimation","Title_styles_templateObject","StyledOpeningTitle","OpeningTitle","Title_styles_StyledOpeningTitle","SkipButton","Button_styles_StyledSkipButton","PublicPage","history","push","crawl_StarWarsCrawl","starWarsIntro","allow","display","title_OpeningTitle","button_SkipButton","paths","path","default","withRouter","defaultPath","routes","route","Route","exact","Switch","Redirect","App","Router","routes_Routes","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2874a3b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-wars-intro.3a4ae4f7.mp3\";","const createReducer = (initialState, handleActions) => {\r\n  if (typeof initialState === 'undefined') {\r\n    throw new Error('initialState should not be undefined')\r\n  }\r\n\r\n  if (Object.prototype.toString.call(handleActions) !== '[object Object]') {\r\n    throw new Error('createReducer expects the second argument as an object representing reducer')\r\n  }\r\n\r\n  return (state = initialState, action) =>\r\n    handleActions.hasOwnProperty(action.type)\r\n      ? handleActions[action.type](state, action)\r\n      : state\r\n}\r\n\r\nexport default createReducer\r\n","export const START_GAME = 'game:START_GAME'\r\nexport const STOP_GAME = 'game:STOP_GAME'\r\n\r\nexport const SET_TIME = 'game:SET_TIME'\r\nexport const SET_SCORE = 'game:SET_SCORE'\r\n\r\nexport const SAVE_SCORE = 'game:SAVE_SCORE'\r\nexport const SAVE_SCORE_SUCCESS = 'game:SAVE_SCORE_SUCCESS'\r\nexport const SAVE_SCORE_FAILURE = 'game:SAVE_SCORE_FAILURE'\r\n\r\nexport const GET_SCORES = 'game:GET_SCORES'\r\nexport const GET_SCORES_SUCCESS = 'game:GET_SCORES_SUCCESS'\r\nexport const GET_SCORES_FAILURE = 'game:GET_SCORES_FAILURE'\r\n","import createReducer from '../createReducer'\r\nimport {\r\n  START_GAME,\r\n  STOP_GAME,\r\n  SET_TIME,\r\n  SET_SCORE,\r\n  SAVE_SCORE,\r\n  SAVE_SCORE_SUCCESS,\r\n  SAVE_SCORE_FAILURE,\r\n  GET_SCORES,\r\n  GET_SCORES_SUCCESS,\r\n  GET_SCORES_FAILURE\r\n} from './constants'\r\n\r\nconst initialState = {\r\n  gameStarted: false,\r\n  gameFinished: false,\r\n  scoreSaved: false,\r\n  time: 120,\r\n  score: 0,\r\n  scores: [],\r\n  gameInfo: null\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [START_GAME]: (state, action) => ({\r\n    ...state,\r\n    gameStarted: true\r\n  }),\r\n  [STOP_GAME]: (state, action) => ({\r\n    ...state,\r\n    gameFinished: true\r\n  }),\r\n  [SET_TIME]: (state, action) => ({\r\n    ...state,\r\n    time: action.payload\r\n  }),\r\n  [SET_SCORE]: (state, action) => ({\r\n    ...state,\r\n    score: action.payload\r\n  }),\r\n  [SAVE_SCORE]: (state, action) => ({\r\n    ...state,\r\n    gameInfo: action.payload,\r\n    error: initialState.error\r\n  }),\r\n  [SAVE_SCORE_SUCCESS]: (state, action) => ({\r\n    ...state,\r\n    scoreSaved: true,\r\n    scores: action.payload,\r\n    error: initialState.error\r\n  }),\r\n  [SAVE_SCORE_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    scoreSaved: false,\r\n    error: action.payload\r\n  }),\r\n  [GET_SCORES]: (state, action) => ({\r\n    ...state,\r\n    scores: initialState.scores,\r\n    error: initialState.error\r\n  }),\r\n  [GET_SCORES_SUCCESS]: (state, action) => ({\r\n    ...state,\r\n    scores: action.payload,\r\n    error: initialState.error\r\n  }),\r\n  [GET_SCORES_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    scores: initialState.scores,\r\n    error: action.payload\r\n  })\r\n})\r\n","export const FETCH_CHARACTERS = 'characters:FETCH_CHARACTERS'\r\nexport const FETCH_CHARACTERS_SUCCESS = 'characters:FETCH_CHARACTERS_SUCCESS'\r\nexport const FETCH_CHARACTERS_FAILURE = 'characters:FETCH_CHARACTERS_FAILURE'\r\n\r\nexport const FETCH_CHARACTER = 'characters:FETCH_CHARACTER'\r\nexport const FETCH_CHARACTER_SUCCESS = 'characters:FETCH_CHARACTER_SUCCESS'\r\nexport const FETCH_CHARACTER_FAILURE = 'characters:FETCH_CHARACTER_FAILURE'\r\n","import createReducer from '../createReducer'\r\nimport {\r\n  FETCH_CHARACTERS,\r\n  FETCH_CHARACTERS_SUCCESS,\r\n  FETCH_CHARACTERS_FAILURE,\r\n  FETCH_CHARACTER,\r\n  FETCH_CHARACTER_SUCCESS,\r\n  FETCH_CHARACTER_FAILURE\r\n} from './constants'\r\n\r\nconst initialState = {\r\n  item: null,\r\n  items: [],\r\n  page: 1,\r\n  loading: false,\r\n  error: ''\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [FETCH_CHARACTERS]: (state, action) => ({\r\n    ...state,\r\n    page: action.payload,\r\n    loading: true,\r\n    error: initialState.error\r\n  }),\r\n  [FETCH_CHARACTERS_SUCCESS]: (state, action) => ({\r\n    ...state,\r\n    items: action.payload,\r\n    loading: false,\r\n    error: initialState.error\r\n  }),\r\n  [FETCH_CHARACTERS_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    loading: false,\r\n    error: action.payload\r\n  }),\r\n  [FETCH_CHARACTER]: (state, action) => ({\r\n    ...state,\r\n    item: initialState.item,\r\n    loading: true,\r\n    error: initialState.error\r\n  }),\r\n  [FETCH_CHARACTER_SUCCESS]: (state, action) => ({\r\n    ...state,\r\n    item: action.payload,\r\n    loading: false,\r\n    error: initialState.error\r\n  }),\r\n  [FETCH_CHARACTER_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    loading: false,\r\n    error: action.payload\r\n  })\r\n})\r\n","import {\r\n  START_GAME,\r\n  STOP_GAME,\r\n  SET_TIME,\r\n  SET_SCORE,\r\n  SAVE_SCORE,\r\n  SAVE_SCORE_SUCCESS,\r\n  SAVE_SCORE_FAILURE,\r\n  GET_SCORES,\r\n  GET_SCORES_SUCCESS,\r\n  GET_SCORES_FAILURE\r\n} from './constants'\r\n\r\nexport const startGame = () => ({\r\n  type: START_GAME\r\n})\r\n\r\nexport const stopGame = () => ({\r\n  type: STOP_GAME\r\n})\r\n\r\nexport const setTime = time => ({\r\n  type: SET_TIME,\r\n  payload: time\r\n})\r\n\r\nexport const setScore = score => ({\r\n  type: SET_SCORE,\r\n  payload: score\r\n})\r\n\r\nexport const saveScore = gameInfo => ({\r\n  type: SAVE_SCORE,\r\n  payload: gameInfo\r\n})\r\n\r\nexport const saveScoreSuccess = scores => ({\r\n  type: SAVE_SCORE_SUCCESS,\r\n  payload: scores\r\n})\r\n\r\nexport const saveScoreFailure = error => ({\r\n  type: SAVE_SCORE_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const getScores = () => ({\r\n  type: GET_SCORES\r\n})\r\n\r\nexport const getScoresSuccess = scores => ({\r\n  type: GET_SCORES_SUCCESS,\r\n  payload: scores\r\n})\r\n\r\nexport const getScoresFailure = error => ({\r\n  type: GET_SCORES_FAILURE,\r\n  payload: error\r\n})\r\n","import { eventChannel, END } from 'redux-saga'\r\nimport { call, all, takeLatest, put, select, takeEvery } from 'redux-saga/effects'\r\nimport { message } from 'antd'\r\n\r\nimport * as actions from './actions'\r\nimport * as types from './constants'\r\n\r\nfunction countdown (secs) {\r\n  return eventChannel(emitter => {\r\n    const iv = setInterval(() => {\r\n      secs > 0 ? emitter(secs) : emitter(END)\r\n      secs -= 1\r\n    }, 1000)\r\n    return () => clearInterval(iv)\r\n  })\r\n}\r\n\r\nexport function * startGame ({ payload }) {\r\n  let time = yield select(state => state.game.time)\r\n  const channel = yield call(countdown, time)\r\n  yield takeEvery(channel, function * (secs) {\r\n    yield put(actions.setTime(--time))\r\n    if (time <= 0) yield put(actions.stopGame())\r\n  })\r\n}\r\n\r\nexport function * saveScore ({ payload }) {\r\n  try {\r\n    const scores = JSON.parse(localStorage.getItem('scores')) || []\r\n    const newScores = [...scores, payload]\r\n    localStorage.setItem('scores', JSON.stringify(newScores))\r\n    yield put(actions.saveScoreSuccess(newScores))\r\n    message.success('Score saved successfuly')\r\n  } catch (error) {\r\n    const errorMessage = 'Failed to save score'\r\n    message.error(errorMessage)\r\n    yield put(actions.saveScoreFailure(errorMessage))\r\n  }\r\n}\r\n\r\nexport function * getScores ({ payload }) {\r\n  try {\r\n    const scores = JSON.parse(localStorage.getItem('scores')) || []\r\n    yield put(actions.getScoresSuccess(scores))\r\n  } catch (error) {\r\n    const errorMessage = 'Failed to get scores'\r\n    message.error(errorMessage)\r\n    yield put(actions.getScoresFailure(errorMessage))\r\n  }\r\n}\r\n\r\n// Watchers\r\nexport function * watchStartGame () {\r\n  yield takeLatest(types.START_GAME, startGame)\r\n}\r\n\r\nexport function * watchSaveScore () {\r\n  yield takeLatest(types.SAVE_SCORE, saveScore)\r\n}\r\n\r\nexport function * watchGetScores () {\r\n  yield takeLatest(types.GET_SCORES, getScores)\r\n}\r\n\r\nexport default function * () {\r\n  yield all([\r\n    watchStartGame(),\r\n    watchSaveScore(),\r\n    watchGetScores()\r\n  ])\r\n}\r\n","import {\r\n  FETCH_CHARACTERS,\r\n  FETCH_CHARACTERS_SUCCESS,\r\n  FETCH_CHARACTERS_FAILURE,\r\n  FETCH_CHARACTER,\r\n  FETCH_CHARACTER_SUCCESS,\r\n  FETCH_CHARACTER_FAILURE\r\n} from './constants'\r\n\r\nexport const fetchCharacters = page => ({\r\n  type: FETCH_CHARACTERS,\r\n  payload: page\r\n})\r\n\r\nexport const fetchCharactersSuccess = characters => ({\r\n  type: FETCH_CHARACTERS_SUCCESS,\r\n  payload: characters\r\n})\r\n\r\nexport const fetchCharactersFailure = error => ({\r\n  type: FETCH_CHARACTERS_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const fetchCharacter = url => ({\r\n  type: FETCH_CHARACTER,\r\n  payload: url\r\n})\r\n\r\nexport const fetchCharacterSuccess = character => ({\r\n  type: FETCH_CHARACTER_SUCCESS,\r\n  payload: character\r\n})\r\n\r\nexport const fetchCharacterFailure = error => ({\r\n  type: FETCH_CHARACTER_FAILURE,\r\n  payload: error\r\n})\r\n","import axios from 'axios'\r\n\r\nconst { NODE_ENV } = process.env\r\n\r\nconst apiHosts = {\r\n  'production': 'https://swapi.dev',\r\n  'staging': 'https://swapi.dev',\r\n  'demo': 'https://swapi.dev',\r\n  'development': 'https://swapi.dev'\r\n}\r\n\r\nconst apiHost = NODE_ENV ? apiHosts[NODE_ENV] : apiHosts['development']\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${apiHost}/api`\r\n})\r\n\r\nexport default instance\r\n","import axios from 'axios'\r\n\r\nconst { NODE_ENV, GOOGLE_CX_ID, GOOGLE_API_KEY } = process.env\r\n\r\nconst apiHosts = {\r\n  'production': 'https://www.googleapis.com',\r\n  'staging': 'https://www.googleapis.com',\r\n  'demo': 'https://www.googleapis.com',\r\n  'development': 'https://www.googleapis.com'\r\n}\r\n\r\nconst apiHost = NODE_ENV ? apiHosts[NODE_ENV] : apiHosts['development']\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${apiHost}/customsearch/v1`\r\n})\r\n\r\ninstance.defaults.params = {\r\n  key: GOOGLE_API_KEY,\r\n  cx: GOOGLE_CX_ID,\r\n  searchType: 'image',\r\n  start: 1,\r\n  num: 3\r\n}\r\n\r\nexport const mapImages = res => {\r\n  return res.data.items.map(item => ({\r\n    url: item.link,\r\n    height: item.image.height,\r\n    width: item.image.width\r\n  }))\r\n}\r\n\r\nexport const getRandomImage = images => {\r\n  const image = images[Math.floor(Math.random() * images.length)]\r\n  return image\r\n}\r\n\r\nexport default instance\r\n","import http from './http'\r\n\r\nexport const mapPropsToData = (...props) => res => {\r\n  const { results } = res.data\r\n\r\n  Object\r\n    .entries(res.data)\r\n    .filter(([key]) => !props || props.includes(key))\r\n    .forEach(([prop, value]) => { results[prop] = value })\r\n\r\n  return results\r\n}\r\n\r\nexport const getData = url => http.get(url).then(res => res.data)\r\n","import http from '../../utils/http'\r\nimport cse, { mapImages, getRandomImage } from '../../utils/cse'\r\nimport { mapPropsToData, getData } from '../../utils/httpHelpers'\r\n\r\nconst charactersEndpoint = '/people'\r\n\r\nexport const fetchCharacters = page => {\r\n  const params = { page }\r\n  return http\r\n    .get(charactersEndpoint, { params })\r\n    .then(mapPropsToData('count'))\r\n}\r\n\r\nexport const fetchCharacter = url => {\r\n  return http\r\n    .get(url)\r\n    .then(res => res.data)\r\n}\r\n\r\nexport const populateCharacterRelationships = character => {\r\n  const relationships = ['species', 'homeworld', 'films', 'starships', 'vehicles']\r\n  return Promise.all(\r\n    relationships.map(key => {\r\n      const reqs = Array.isArray(character[key])\r\n        ? Promise.all(character[key].map(getData))\r\n        : getData(character[key])\r\n\r\n      return reqs.then(rel => {\r\n        rel.relationship = key\r\n        return rel\r\n      })\r\n    })\r\n  )\r\n    .then(rels => {\r\n      rels.forEach(rel => { character[rel.relationship] = rel })\r\n      return character\r\n    })\r\n}\r\n\r\nexport const populateCharacterImage = character => {\r\n  const params = {\r\n    q: `star wars ${character.name}`\r\n  }\r\n  return cse\r\n    .get('/', { params })\r\n    .then(mapImages)\r\n    .then(getRandomImage)\r\n    .then(image => ({ ...character, image }))\r\n}\r\n","import { all, call, takeLatest, put, select } from 'redux-saga/effects'\r\nimport { message } from 'antd'\r\n\r\nimport * as actions from './actions'\r\nimport * as types from './constants'\r\nimport * as services from './services'\r\n\r\nexport function * fetchCharacters ({ payload: page }) {\r\n  try {\r\n    const oldCharacters = yield select(state => state.characters.items)\r\n    const newCharacters = yield call(services.fetchCharacters, page + 1)\r\n    const props = Object.keys(newCharacters).filter(key => isNaN(key))\r\n    const characters = [...oldCharacters, ...newCharacters]\r\n    props.forEach(prop => { characters[prop] = newCharacters[prop] })\r\n    yield put(actions.fetchCharactersSuccess(characters))\r\n    for (let i = 0; i < characters.length; i++) {\r\n      if (characters[i].image) continue\r\n      characters[i] = yield call(services.populateCharacterImage, characters[i])\r\n      yield put(actions.fetchCharactersSuccess([...characters]))\r\n    }\r\n  } catch (error) {\r\n    const errorMessage = 'Failed to fetch characters'\r\n    message.error(errorMessage)\r\n    yield put(actions.fetchCharactersFailure(errorMessage))\r\n  }\r\n}\r\n\r\nexport function * fetchCharacter ({ payload: url }) {\r\n  try {\r\n    const characters = yield select(state => state.characters.items)\r\n    let character = characters.find(character => character.url === url)\r\n    if (!character) character = yield call(services.fetchCharacter, url)\r\n    yield put(actions.fetchCharacterSuccess(character))\r\n    const characterWithRelationships = yield call(services.populateCharacterRelationships, character)\r\n    yield put(actions.fetchCharacterSuccess({ ...characterWithRelationships }))\r\n  } catch (error) {\r\n    const errorMessage = 'Failed to fetch character'\r\n    message.error(errorMessage)\r\n    yield put(actions.fetchCharacterFailure(errorMessage))\r\n  }\r\n}\r\n\r\n// Watchers\r\nexport function * watchFetchCharacters () {\r\n  yield takeLatest(types.FETCH_CHARACTERS, fetchCharacters)\r\n}\r\n\r\nexport function * watchFetchCharacter () {\r\n  yield takeLatest(types.FETCH_CHARACTER, fetchCharacter)\r\n}\r\n\r\nexport default function * () {\r\n  yield all([\r\n    watchFetchCharacters(),\r\n    watchFetchCharacter()\r\n  ])\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { all } from 'redux-saga/effects'\r\n\r\n// Reducers\r\nimport gameReducers from './game/reducers'\r\nimport charactersReducers from './characters/reducers'\r\n\r\n// Sagas\r\nimport gameSagas from './game/sagas'\r\nimport charactersSagas from './characters/sagas'\r\n\r\n// Configure Reducers\r\nexport const rootReducer = combineReducers({\r\n  game: gameReducers,\r\n  characters: charactersReducers\r\n})\r\n\r\n// Configure Sagas\r\nexport function * rootSaga () {\r\n  yield all([\r\n    gameSagas(),\r\n    charactersSagas()\r\n  ])\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootReducer, rootSaga } from './index'\r\n\r\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n  : compose\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst initialState = {}\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nconst store = createStore(rootReducer, initialState, enhancer)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory({ basename: '/starquiz' })\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\n\r\nconst headerStyle = css`\r\n  z-index: 5;\r\n  width: 100%;\r\n  max-width: 75rem;\r\n  background: transparent;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  margin-bottom: 1rem;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n`\r\n\r\nconst groupStyle = css`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`\r\n\r\nconst titleStyle = css`\r\n  margin: 0;\r\n  color: #feda4a;\r\n  font-size: 4rem;\r\n  line-height: 1;\r\n  text-align: center;\r\n  text-transform: lowercase;\r\n  font-family: 'Starjedi', sans-serif;\r\n  @media only screen and (max-width: 768px) { font-size: 2.25rem; }\r\n`\r\n\r\nconst scoreStyle = css`\r\n  margin-right: 1rem;\r\n  color: #fff;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  text-align: center;\r\n  text-shadow:\r\n    0 0 0.5rem #fff,\r\n    0 0 1.0rem #75c33c,\r\n    0 0 1.5rem #75c33c,\r\n    0 0 2.0rem #75c33c,\r\n    0 0 2.5rem #75c33c,\r\n    0 0 3.0rem #75c33c,\r\n    0 0 3.5rem #75c33c;\r\n  svg {\r\n    font-size: 2.5rem;\r\n    fill: #fff;\r\n    filter:\r\n      drop-shadow(0 0 0.5rem #fff)\r\n      drop-shadow(0 0 1.0rem #75c33c)\r\n      drop-shadow(0 0 1.5rem #75c33c);\r\n    @media only screen and (max-width: 768px) { font-size: 2rem; }\r\n  }\r\n  @media only screen and (max-width: 768px) { font-size: 2rem; }\r\n`\r\n\r\nconst timeStyle = css`\r\n  color: #f00;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  text-align: center;\r\n  text-shadow:\r\n    0 0 0.5rem #f00,\r\n    0 0 1.0rem #900,\r\n    0 0 1.5rem #900,\r\n    0 0 2.0rem #900,\r\n    0 0 2.5rem #900,\r\n    0 0 3.0rem #900,\r\n    0 0 3.5rem #900;\r\n\r\n  svg {\r\n    font-size: 2.5rem;\r\n    fill: #f00;\r\n    filter:\r\n      drop-shadow(0 0 0.5rem #f00)\r\n      drop-shadow(0 0 1.0rem #900)\r\n      drop-shadow(0 0 1.5rem #900);\r\n      @media only screen and (max-width: 768px) { font-size: 2rem; }\r\n  }\r\n  @media only screen and (max-width: 768px) { font-size: 2rem; }\r\n`\r\n\r\nexport const StyledHeader = props => (\r\n  <header css={headerStyle} {...props} />\r\n)\r\n\r\nexport const Group = props => (\r\n  <div css={groupStyle} {...props} />\r\n)\r\n\r\nexport const Title = props => (\r\n  <h1 css={titleStyle} {...props} >\r\n    {props.children}\r\n  </h1>\r\n)\r\n\r\nexport const Score = props => (\r\n  <span css={scoreStyle} {...props} />\r\n)\r\n\r\nexport const Time = props => (\r\n  <span css={timeStyle} {...props} />\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Icon } from 'antd'\r\nimport { StyledHeader, Group, Title, Score, Time } from './styles/Header.styles'\r\n\r\nconst formatTime = time => {\r\n  const minutes = Math.floor(time / 60)\r\n  const seconds = time - minutes * 60\r\n  const formattedSeconds = seconds < 10 ? '0' + seconds : seconds\r\n  return `${minutes}:${formattedSeconds}`\r\n}\r\n\r\nexport const Header = ({\r\n  score,\r\n  time\r\n}) => {\r\n  return (\r\n    <StyledHeader>\r\n      <Group>\r\n        <Title>\r\n          Star Quiz\r\n        </Title>\r\n      </Group>\r\n      <Group>\r\n        <Score>\r\n          <Icon type='thunderbolt' /> {score}\r\n        </Score>\r\n        <Time>\r\n          <Icon type='clock-circle' /> {formatTime(time)}\r\n        </Time>\r\n      </Group>\r\n    </StyledHeader>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  score: PropTypes.number,\r\n  time: PropTypes.number\r\n}\r\n\r\nHeader.defaultProps = {\r\n  score: 0,\r\n  time: 120\r\n}\r\n\r\nexport default Header\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Modal } from 'antd'\r\n\r\nconst modalStyle = css`\r\n`\r\n\r\nconst groupStyle = css`\r\n  display: block;\r\n  width: 100%;\r\n  :not(:last-of-type) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`\r\n\r\nconst imageStyle = css`\r\n  height: 15rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  img {\r\n    max-height: 100%;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`\r\n\r\nconst itemStyle = css`\r\n\r\n`\r\n\r\nconst itemLabelStyle = css`\r\n  :after { content: ': '; }\r\n  text-transform: capitalize;\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n`\r\n\r\nexport const StyledModal = props => (\r\n  <Modal css={modalStyle} {...props} />\r\n)\r\n\r\nexport const Group = props => (\r\n  <div css={groupStyle} {...props} />\r\n)\r\n\r\nexport const Image = props => (\r\n  <div css={imageStyle} >\r\n    {props.src && <img src={props.src} alt='character' {...props} />}\r\n  </div>\r\n)\r\n\r\nexport const Item = props => (\r\n  <div css={itemStyle} {...props}>\r\n    <span css={itemLabelStyle}>{props.label}</span>\r\n    {props.children}\r\n  </div>\r\n)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { Spin } from 'antd'\r\nimport { get } from 'lodash'\r\nimport { StyledModal, Group, Image, Item } from './styles/Modal.styles'\r\nimport { fetchCharacter } from '../../store/characters/actions'\r\n\r\nexport class CharacterModal extends Component {\r\n  static propTypes = {\r\n    visible: PropTypes.bool,\r\n    toggle: PropTypes.func.isRequired,\r\n    button: PropTypes.node,\r\n    url: PropTypes.string.isRequired,\r\n    character: PropTypes.object,\r\n    fetchCharacter: PropTypes.func.isRequired\r\n  }\r\n\r\n  static defaultProps = {\r\n    visible: false,\r\n    button: null\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    const { visible, fetchCharacter, url } = this.props\r\n    !prevProps.visible && visible && fetchCharacter(url)\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      visible,\r\n      toggle,\r\n      button,\r\n      character\r\n    } = this.props\r\n\r\n    return (\r\n      <StyledModal\r\n        title='Details'\r\n        visible={visible}\r\n        onCancel={toggle}\r\n        footer={button}\r\n      >\r\n        <Group>\r\n          <Image src={get(character, 'image.url')} />\r\n        </Group>\r\n        <Group>\r\n          <Item label='birth year'>\r\n            {this.getProp('birth_year')}\r\n          </Item>\r\n          <Item label='eye color'>\r\n            {this.getProp('eye_color')}\r\n          </Item>\r\n          <Item label='gender'>\r\n            {this.getProp('gender')}\r\n          </Item>\r\n          <Item label='hair color'>\r\n            {this.getProp('hair_color')}\r\n          </Item>\r\n          <Item label='height'>\r\n            {this.getProp('height')}\r\n          </Item>\r\n          <Item label='mass'>\r\n            {this.getProp('mass')}\r\n          </Item>\r\n          <Item label='skin color'>\r\n            {this.getProp('skin_color')}\r\n          </Item>\r\n          <Item label='species'>\r\n            {this.mapArrayProps(get(character, 'species'), 'name')}\r\n          </Item>\r\n          <Item label='homeworld'>\r\n            {this.getProp('homeworld.name')}\r\n          </Item>\r\n          <Item label='films'>\r\n            {this.mapArrayProps(get(character, 'films'), 'title')}\r\n          </Item>\r\n          <Item label='vehicles'>\r\n            {this.mapArrayProps(get(character, 'vehicles'), 'name')}\r\n          </Item>\r\n          <Item label='starships'>\r\n            {this.mapArrayProps(get(character, 'starships'), 'name')}\r\n          </Item>\r\n        </Group>\r\n      </StyledModal>\r\n    )\r\n  }\r\n\r\n  getProp = prop => {\r\n    return get(this.props.character, prop) || <Spin size='small' />\r\n  }\r\n\r\n  mapArrayProps = (arr, prop) => {\r\n    if (!arr || this.props.loading) return <Spin size='small' />\r\n    return arr\r\n      .map(item => item[prop])\r\n      .filter(item => typeof item === 'string')\r\n      .join(' | ') || 'None'\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ characters }) => ({\r\n  character: characters.item,\r\n  loading: characters.loading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    fetchCharacter\r\n  }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterModal)\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\n\r\nconst inputStyle = css`\r\n`\r\n\r\nconst searchInputStyle = css`\r\n  ${inputStyle};\r\n  text-align: left;\r\n  .ant-form-item-children-icon {\r\n    right: 3rem !important;\r\n    top: .4rem !important;\r\n  }\r\n`\r\n\r\nexport const StyledSearchInput = props => (\r\n  <div css={searchInputStyle} {...props} />\r\n)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd'\r\nimport { StyledSearchInput } from './styles/Input.styles'\r\n\r\nexport class SearchInput extends Component {\r\n  static propTypes = {\r\n    onSearch: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n  }\r\n\r\n  state = {\r\n    input: ''\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      input,\r\n      error,\r\n      success\r\n    } = this.props\r\n\r\n    return (\r\n      <StyledSearchInput>\r\n        <Form.Item\r\n          hasFeedback\r\n          help={success || error}\r\n          validateStatus={success ? 'success' : error ? 'error' : ''}\r\n        >\r\n          <Input.Search\r\n            ref={input}\r\n            onChange={this.handleChange}\r\n            onSearch={this.handleSearch}\r\n            disabled={!!(success || error)}\r\n            placeholder='My name is ...'\r\n            enterButton\r\n          />\r\n        </Form.Item>\r\n      </StyledSearchInput>\r\n    )\r\n  }\r\n\r\n  handleChange = input => {\r\n    this.setState({ input })\r\n  }\r\n\r\n  handleSearch = input => {\r\n    this.setState({ input: '' })\r\n    this.props.onSearch(input)\r\n  }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <SearchInput input={ref} {...props} />)\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Card } from 'antd'\r\n\r\nconst cardStyle = css`\r\n`\r\n\r\nconst characterCardStyle = css`\r\n  ${cardStyle};\r\n  width: 100%;\r\n  .ant-card-head {\r\n    padding: 0;\r\n    &-title { padding: 0; }\r\n  }\r\n  .ant-card-body {\r\n    padding: .5rem;\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n  .ant-btn {\r\n    font-size: 1.25rem;\r\n    font-weight: bolder;\r\n    height: 2.5rem;\r\n    width: 2.5rem;\r\n  }\r\n`\r\n\r\nconst imageStyle = css`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  height: 12rem;\r\n  img {\r\n    transition: transform .4s ease-out;\r\n    width: 100%;\r\n    height: 12rem;\r\n    object-fit: cover;\r\n    object-position: 50% 5%;\r\n    :hover { transform: scale(1.1); }\r\n  }\r\n`\r\n\r\nexport const StyledCharacterCard = props => (\r\n  <Card css={characterCardStyle} {...props} />\r\n)\r\n\r\nexport const Image = props => (\r\n  <div css={imageStyle} >\r\n    {props.src && <img src={props.src} alt='character' {...props} />}\r\n  </div>\r\n)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { Spin, Button, Popover, message } from 'antd'\r\nimport { get } from 'lodash'\r\nimport CharacterModal from '../modal/CharacterModal'\r\nimport SearchInput from '../input/SearchInput'\r\nimport { StyledCharacterCard, Image } from './styles/Card.styles'\r\nimport { setScore } from '../../store/game/actions'\r\n\r\nexport class CharacterCard extends Component {\r\n  static propTypes = {\r\n    character: PropTypes.object.isRequired,\r\n    setScore: PropTypes.func.isRequired,\r\n    score: PropTypes.number.isRequired,\r\n    majorScore: PropTypes.number,\r\n    minorScore: PropTypes.number\r\n  }\r\n\r\n  static defaultProps = {\r\n    character: {},\r\n    majorScore: 10,\r\n    minorScore: 5\r\n  }\r\n\r\n  state = {\r\n    isModalVisible: false,\r\n    characterScore: this.props.majorScore,\r\n    error: '',\r\n    success: ''\r\n  }\r\n\r\n  popoverInput = React.createRef()\r\n  modalInput = React.createRef()\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    !prevState.isModalVisible &&\r\n      this.state.isModalVisible &&\r\n      this.focusInput(this.modalInput) &&\r\n      this.setState({ characterScore: this.props.minorScore })\r\n  }\r\n\r\n  render () {\r\n    const { isModalVisible } = this.state\r\n    const { character } = this.props\r\n\r\n    return (\r\n      <Spin spinning={!get(character, 'image')}>\r\n        <StyledCharacterCard\r\n          title={this.renderImage()}\r\n          bordered={false}\r\n        >\r\n          <Popover\r\n            trigger='click'\r\n            content={this.renderInput('popoverInput')}\r\n            onVisibleChange={visible => visible && this.focusInput(this.popoverInput)}\r\n          >\r\n            <Button\r\n              type='primary'\r\n              icon='question'\r\n            />\r\n          </Popover>\r\n          <Button\r\n            type='primary'\r\n            icon='ellipsis'\r\n            onClick={this.toggleModal}\r\n          />\r\n          <CharacterModal\r\n            visible={isModalVisible}\r\n            toggle={this.toggleModal}\r\n            url={get(character, 'url')}\r\n            button={this.renderInput('modalInput')}\r\n          />\r\n        </StyledCharacterCard>\r\n      </Spin>\r\n    )\r\n  }\r\n\r\n  renderImage = () => {\r\n    const url = get(this, 'props.character.image.url')\r\n    return (\r\n      <Image\r\n        src={url}\r\n        onClick={this.toggleModal}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderInput = ref => {\r\n    return (\r\n      <SearchInput\r\n        ref={this[ref]}\r\n        onSearch={this.handleSearch}\r\n        error={this.state.error}\r\n        success={this.state.success}\r\n      />\r\n    )\r\n  }\r\n\r\n  focusInput = (ref) => {\r\n    return setTimeout(() => ref.current.input.focus(), 400)\r\n  }\r\n\r\n  handleSearch = input => {\r\n    const { name } = this.props.character\r\n    const formatted = input => input.trim().toLowerCase().replace(/[^a-z0-9]/gi, '')\r\n    formatted(input).includes(formatted(name))\r\n      ? this.setState({ success: `Right! I'm ${name}` }, this.handleSuccess)\r\n      : this.setState({ error: `Wrong! I'm ${name}` }, this.handleFailure)\r\n  }\r\n\r\n  handleSuccess = () => {\r\n    const { characterScore } = this.state\r\n    const { score, setScore } = this.props\r\n    message.success(`+${characterScore} points: The force is strong with you!`)\r\n    setScore(score + characterScore)\r\n    setTimeout(() => this.setState({ isModalVisible: false }), 1000)\r\n  }\r\n\r\n  handleFailure = () => {\r\n    message.error('It\\'s a trap!')\r\n    setTimeout(() => this.setState({ isModalVisible: false }), 1000)\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isModalVisible: !this.state.isModalVisible })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  score: game.score\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    setScore\r\n  }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterCard)\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Spin } from 'antd'\r\n\r\nconst listStyle = css`\r\n`\r\n\r\nconst characterListStyle = css`\r\n  ${listStyle};\r\n  overflow: auto;\r\n  height: 100vh;\r\n  padding-top: 5rem;\r\n  position: sticky;\r\n  top: 5rem;\r\n  ::-webkit-scrollbar { width: 0; }\r\n  .ant-row { margin: 0 !important; }\r\n`\r\n\r\nconst loadingStyle = css`\r\n  position: absolute;\r\n  bottom: 3rem;\r\n  width: 100%;\r\n  text-align: center;\r\n`\r\n\r\nexport const StyledCharacterList = props => (\r\n  <div css={characterListStyle} {...props} />\r\n)\r\n\r\nexport const Loading = props => (\r\n  <div css={loadingStyle} {...props}>\r\n    <Spin />\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { List, Spin } from 'antd'\r\nimport InfiniteScroll from 'react-infinite-scroller'\r\nimport CharacterCard from '../card/CharacterCard'\r\nimport { StyledCharacterList, Loading } from './styles/List.styles'\r\n\r\nexport const CharacterList = ({\r\n  data,\r\n  loading,\r\n  fetch\r\n}) => {\r\n  const hasMore = data.length < data.count\r\n\r\n  return (\r\n    <StyledCharacterList>\r\n      <InfiniteScroll\r\n        pageStart={2}\r\n        loadMore={page => !loading && fetch(page)}\r\n        hasMore={hasMore}\r\n        useWindow={false}\r\n      >\r\n        <List\r\n          locale={{ emptyText: <Spin /> }}\r\n          dataSource={data}\r\n          split={false}\r\n          grid={{ gutter: 16, xs: 1, sm: 2, md: 3, lg: 4 }}\r\n          renderItem={character => (\r\n            <List.Item>\r\n              <CharacterCard character={character} />\r\n            </List.Item>\r\n          )}\r\n        >\r\n          {loading && hasMore && <Loading />}\r\n        </List>\r\n      </InfiniteScroll>\r\n    </StyledCharacterList>\r\n  )\r\n}\r\n\r\nCharacterList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  fetch: PropTypes.func,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nCharacterList.defaultProps = {\r\n  data: [],\r\n  loading: false\r\n}\r\n\r\nexport default CharacterList\r\n","export const RULES = [\r\n  'Can you name all the Star Wars characters?',\r\n  'You will have two minutes to name as many characters as you can.',\r\n  '10 points if you can name the character without asking for aditional information.',\r\n  '5 points if you name the character with the given information.',\r\n  'Wrong answers won\\'t affect your score.',\r\n  'You can only try to guess a character\\'s name once.',\r\n  'May the force be with you!'\r\n]\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'antd'\r\n\r\nconst buttonStyle = css`\r\n`\r\n\r\nconst skipButtonStyle = css`\r\n  ${buttonStyle};\r\n  position: fixed;\r\n  bottom: 1rem;\r\n  right: 1rem;\r\n`\r\n\r\nconst submitButtonStyle = css`\r\n  ${buttonStyle};\r\n  width: 100%;\r\n`\r\n\r\nexport const StyledSkipButton = props => (\r\n  <Link to={props.to}>\r\n    <Button css={skipButtonStyle} {...props} />\r\n  </Link>\r\n)\r\n\r\nexport const StyledSubmitButton = props => (\r\n  <Button css={submitButtonStyle} {...props} />\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledSubmitButton } from './styles/Button.styles'\r\n\r\nexport const SubmitButton = props => {\r\n  const { children } = props\r\n\r\n  return (\r\n    <StyledSubmitButton\r\n      type='primary'\r\n      htmlType='submit'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledSubmitButton>\r\n  )\r\n}\r\n\r\nSubmitButton.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nSubmitButton.defaultProps = {\r\n  children: ''\r\n}\r\n\r\nexport default SubmitButton\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { RULES } from '../../utils/constants'\r\nimport SubmitButton from '../button/SubmitButton'\r\nimport { StyledModal } from './styles/Modal.styles'\r\n\r\nconst button = delegate => (\r\n  <SubmitButton\r\n    onClick={delegate}\r\n  >\r\n    Start\r\n  </SubmitButton>\r\n)\r\n\r\nexport const RulesModal = ({\r\n  visible,\r\n  onOk\r\n}) => {\r\n  return (\r\n    <StyledModal\r\n      title='Rules'\r\n      visible={visible}\r\n      closable={false}\r\n      maskClosable={false}\r\n      footer={button(onOk)}\r\n    >\r\n      {RULES.map(rule => <p key={rule}>{rule}</p>)}\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nRulesModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n  onOk: PropTypes.func.isRequired\r\n}\r\n\r\nRulesModal.defaultProps = {\r\n  visible: false\r\n}\r\n\r\nexport default RulesModal\r\n","const name = name => /^[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ ]+$/.test(name)\r\n\r\nexport default {\r\n  name\r\n}\r\n","/* eslint no-template-curly-in-string: 0 */\r\nimport * as yup from 'yup'\r\nimport validate from './validate'\r\n\r\nyup.setLocale({\r\n  mixed: {\r\n    notType: 'Invlaid input'\r\n  },\r\n  string: {\r\n    email: 'Invalid email'\r\n  }\r\n})\r\n\r\nyup.addMethod(yup.string, 'name', () => yup.string().test('name', 'Invalid name', validate.name))\r\n\r\nexport default yup\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'antd'\r\n\r\nconst fieldHasError = (touched, error) => touched && !!error\r\n\r\nexport const ValidatedSharedInput = ({\r\n  touched,\r\n  error,\r\n  label,\r\n  children\r\n}) => {\r\n  return (\r\n    <Form.Item\r\n      className='input'\r\n      label={label}\r\n      hasFeedback={fieldHasError(!!touched, error)}\r\n      validateStatus={fieldHasError(!!touched, error) ? 'error' : ''}\r\n      help={fieldHasError(!!touched, error) ? error : ''}\r\n    >\r\n      {children}\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nValidatedSharedInput.propTypes = {\r\n  touched: PropTypes.any,\r\n  error: PropTypes.string,\r\n  label: PropTypes.string,\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default ValidatedSharedInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Input, Icon } from 'antd'\r\nimport ValidatedSharedInput from './ValidatedSharedInput'\r\n\r\nexport const NameInput = ({\r\n  label,\r\n  field,\r\n  form\r\n}) => {\r\n  return (\r\n    <ValidatedSharedInput\r\n      touched={form.touched[field.name]}\r\n      error={form.errors[field.name]}\r\n      label={label}\r\n    >\r\n      <Input\r\n        {...field}\r\n        className='text-input'\r\n        prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n        placeholder='Name'\r\n        autoComplete='name'\r\n      />\r\n    </ValidatedSharedInput>\r\n  )\r\n}\r\n\r\nNameInput.propTypes = {\r\n  label: PropTypes.string,\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired\r\n}\r\n\r\nexport default NameInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Input, Icon } from 'antd'\r\nimport ValidatedSharedInput from './ValidatedSharedInput'\r\n\r\nexport const EmailInput = ({\r\n  label,\r\n  field,\r\n  form\r\n}) => {\r\n  return (\r\n    <ValidatedSharedInput\r\n      touched={form.touched[field.name]}\r\n      error={form.errors[field.name]}\r\n      label={label}\r\n    >\r\n      <Input\r\n        {...field}\r\n        className='email-input'\r\n        prefix={<Icon type='mail' style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n        placeholder='Email'\r\n        autoComplete='username email'\r\n      />\r\n    </ValidatedSharedInput>\r\n  )\r\n}\r\n\r\nEmailInput.propTypes = {\r\n  label: PropTypes.string,\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired\r\n}\r\n\r\nexport default EmailInput\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Form } from 'formik'\r\n\r\nconst formStyle = css`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nexport const StyledForm = props => (\r\n  <Form {...props} css={formStyle} />\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators, compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { withFormik, Field } from 'formik'\r\nimport yup from '../../utils/yup'\r\nimport NameInput from '../input/NameInput'\r\nimport EmailInput from '../input/EmailInput'\r\nimport SubmitButton from '../button/SubmitButton'\r\nimport { StyledForm } from './styles/Form.styles'\r\nimport { saveScore } from '../../store/game/actions'\r\n\r\nconst handleSubmit = (values, formikBag) => {\r\n  const { score, saveScore, onSubmit } = formikBag.props\r\n  const submitValues = { ...values, score }\r\n  saveScore(submitValues)\r\n  onSubmit(submitValues)\r\n}\r\n\r\nconst validationSchema = props => {\r\n  return yup.object().shape({\r\n    name: yup.string().name().required(),\r\n    email: yup.string().email()\r\n  })\r\n}\r\n\r\nexport const ScoreForm = ({\r\n  isValid,\r\n  errors,\r\n  values\r\n}) => {\r\n  const hasError = Object.keys(errors).length !== 0\r\n\r\n  return (\r\n    <StyledForm>\r\n      <Field\r\n        name='name'\r\n        component={NameInput}\r\n      />\r\n      <Field\r\n        name='email'\r\n        component={EmailInput}\r\n      />\r\n      <SubmitButton\r\n        disabled={hasError || !isValid}\r\n      >\r\n        Submit\r\n      </SubmitButton>\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nScoreForm.propTypes = {\r\n  isValid: PropTypes.bool,\r\n  errors: PropTypes.object,\r\n  values: PropTypes.object,\r\n  onSubmit: PropTypes.func\r\n}\r\n\r\nScoreForm.defaultProps = {\r\n  onSubmit: () => { }\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  score: game.score\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    saveScore\r\n  }, dispatch)\r\n\r\nconst enhance = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withFormik({\r\n    validationSchema,\r\n    handleSubmit\r\n  })\r\n)\r\n\r\nexport default enhance(ScoreForm)\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport { Table } from 'antd'\r\n\r\nconst tableStyle = css`\r\n  table {\r\n    table-layout: fixed;\r\n    td {\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }  \r\n  }\r\n`\r\n\r\nconst hide = css`\r\n  width: 0;\r\n  white-space: nowrap;\r\n  color: transparent;\r\n`\r\n\r\nconst scoreTableStyle = css`\r\n  ${tableStyle};\r\n  display: flex;\r\n  .name-col { width: 8em; }\r\n  .email-col { width: 13em; }\r\n  .score-col { width: 3em; }\r\n  @media only screen and (max-width: 600px) { .email-col { ${hide}; } }\r\n`\r\n\r\nexport const StyledTable = props => (\r\n  <Table {...props} css={tableStyle} />\r\n)\r\n\r\nexport const StyledScoreTable = props => (\r\n  <Table {...props} css={scoreTableStyle} />\r\n)\r\n","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { StyledScoreTable } from './styles/Table.styles'\r\nimport { getScores } from '../../store/game/actions'\r\n\r\nexport class ScoreTable extends Component {\r\n  componentDidMount () {\r\n    const { scores, getScores } = this.props\r\n    scores.length === 0 && getScores()\r\n  }\r\n\r\n  render () {\r\n    const { scores } = this.props\r\n\r\n    return (\r\n      <StyledScoreTable\r\n        size='small'\r\n        dataSource={scores}\r\n        columns={this.getColumns()}\r\n      />\r\n    )\r\n  }\r\n\r\n  getColumns = () => [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      className: 'name-col'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      className: 'email-col'\r\n    },\r\n    {\r\n      title: 'Score',\r\n      dataIndex: 'score',\r\n      key: 'score',\r\n      className: 'score-col'\r\n    }\r\n  ]\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  scores: game.scores\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    getScores\r\n  }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreTable)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Tabs } from 'antd'\r\nimport ScoreForm from '../form/ScoreForm'\r\nimport ScoreTable from '../table/ScoreTable'\r\nimport { StyledModal } from './styles/Modal.styles'\r\n\r\nexport class ScoreModal extends Component {\r\n  static propTypes = {\r\n    visible: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    visible: false\r\n  }\r\n\r\n  state = {\r\n    key: '1',\r\n    savedScore: false\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      key,\r\n      savedScore\r\n    } = this.state\r\n    const {\r\n      visible,\r\n      score\r\n    } = this.props\r\n\r\n    return (\r\n      <StyledModal\r\n        title='Score'\r\n        visible={visible}\r\n        closable={false}\r\n        maskClosable={false}\r\n        footer={null}\r\n      >\r\n        <Tabs\r\n          activeKey={key}\r\n          onChange={key => !savedScore && this.setState({ key })}\r\n        >\r\n          <Tabs.TabPane\r\n            disabled={savedScore}\r\n            tab='Submit score'\r\n            key='1'\r\n          >\r\n            <h2>You Scored {score} points!</h2>\r\n            <p>Fill in your info to save the score:</p>\r\n            <ScoreForm onSubmit={() => this.setState({ savedScore: true, key: '2' })} />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane\r\n            tab='Leaderboards'\r\n            key='2'\r\n          >\r\n            <h2>Thanks for Playing!</h2>\r\n            <ScoreTable />\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      </StyledModal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScoreModal\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\n\r\nconst pageStyle = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  width: 100%;\r\n  max-width: 75rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst homePageStyle = blur => css`\r\n  ${pageStyle};\r\n  transition: filter .4s ease-out;\r\n  ${blur && 'filter: blur(.5rem)'};\r\n`\r\n\r\nconst containerStyle = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 1rem;\r\n`\r\n\r\nexport const StyledHomePage = props => (\r\n  <main css={homePageStyle(props.blur)}>\r\n    {props.children}\r\n  </main>\r\n)\r\n\r\nexport const Container = props => (\r\n  <section css={containerStyle} {...props} />\r\n)\r\n","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport Header from '../components/header/Header'\r\nimport CharacterList from '../components/list/CharacterList'\r\nimport RulesModal from '../components/modal/RulesModal'\r\nimport ScoreModal from '../components/modal/ScoreModal'\r\nimport { StyledHomePage } from './styles/Page.styles'\r\nimport { startGame } from '../store/game/actions'\r\nimport { fetchCharacters } from '../store/characters/actions'\r\n\r\nexport class HomePage extends Component {\r\n  componentDidMount () {\r\n    const { characters, fetchCharacters } = this.props\r\n    const page = (characters.length / 10) + 1\r\n    fetchCharacters(page)\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      gameStarted,\r\n      gameFinished,\r\n      time,\r\n      score,\r\n      characters,\r\n      loading,\r\n      startGame,\r\n      fetchCharacters\r\n    } = this.props\r\n\r\n    return (\r\n      <StyledHomePage blur={!gameStarted || gameFinished}>\r\n        <Header\r\n          time={time}\r\n          score={score}\r\n        />\r\n        <CharacterList\r\n          scrollParentRef={this.page}\r\n          data={characters}\r\n          loading={loading}\r\n          fetch={fetchCharacters}\r\n        />\r\n        <RulesModal\r\n          visible={!gameStarted}\r\n          onOk={startGame}\r\n        />\r\n        <ScoreModal\r\n          visible={gameFinished}\r\n          score={score}\r\n        />\r\n      </StyledHomePage>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game, characters }) => ({\r\n  gameStarted: game.gameStarted,\r\n  gameFinished: game.gameFinished,\r\n  time: game.time,\r\n  score: game.score,\r\n  characters: characters.items,\r\n  loading: characters.loading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    startGame,\r\n    fetchCharacters\r\n  }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\r\n","/* eslint react/prop-types: 0 */\r\n/** @jsx jsx */\r\nimport { jsx, css, keyframes } from '@emotion/core'\r\n\r\nconst containerStyle = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  perspective: 60rem;\r\n  overflow: hidden;\r\n  color: #feda4a;\r\n  font-family: 'Pathway Gothic One', sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  letter-spacing: .25rem;\r\n  line-height: 150%;\r\n  text-align: justify;\r\n`\r\n\r\nconst fadeStyle = css`\r\n  z-index: 1;\r\n  position: fixed;\r\n  top: -1.25rem;\r\n  left: 0;\r\n  width: 100%;\r\n  min-height: 75vh;\r\n  background-image: linear-gradient(0deg, transparent, black 90%);\r\n`\r\n\r\nconst crawlAnimation = keyframes`\r\n  0% {\r\n    top: 100vh;\r\n    transform: rotateX(20deg) translateZ(0);\r\n  }\r\n  100% { \r\n    top: -300rem;\r\n    transform: rotateX(25deg) translateZ(-125rem);\r\n  }\r\n`\r\n\r\nconst crawlStyle = duration => css`\r\n  position: relative;\r\n  top: 100vh;\r\n  transform-origin: 50% 100%;\r\n  animation: ${crawlAnimation} ${duration / 1000}s linear;\r\n`\r\n\r\nconst titleStyle = css`\r\n  font-size: 90%;\r\n  margin: 0 0 5rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const Container = props => (\r\n  <section css={containerStyle} {...props} />\r\n)\r\n\r\nexport const Fade = props => (\r\n  <div css={fadeStyle} {...props} />\r\n)\r\n\r\nexport const Crawl = props => (\r\n  <div css={crawlStyle(props.duration)} {...props} />\r\n)\r\n\r\nexport const Title = props => (\r\n  <h2 css={titleStyle} {...props}>\r\n    {props.children}\r\n  </h2>\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Fade, Crawl, Title } from './styles/Crawl.styles'\r\n\r\nexport const StarWarsCrawl = ({\r\n  title,\r\n  duration,\r\n  children\r\n}) => {\r\n  return (\r\n    <>\r\n      <Fade />\r\n      <Container>\r\n        <Crawl duration={duration}>\r\n          <Title>{title}</Title>\r\n          {children}\r\n        </Crawl>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nStarWarsCrawl.propTypes = {\r\n  title: PropTypes.string,\r\n  duration: PropTypes.number,\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nStarWarsCrawl.defaultProps = {\r\n  title: '',\r\n  duration: 60000\r\n}\r\n\r\nexport default StarWarsCrawl\r\n","/* eslint react/prop-types: 0 */\r\n/** @jsx jsx */\r\nimport { jsx, css, keyframes } from '@emotion/core'\r\n\r\nconst openingTitleAnimation = keyframes`\r\n  0% {\r\n    top: 30vmin;\r\n    opacity: 1;\r\n    font-size: 30vmin;\r\n    letter-spacing: 1rem;\r\n  }\r\n  100% {\r\n    top: 15vmin;\r\n    opacity: 0;\r\n    font-size: 0;\r\n    letter-spacing: .1rem;\r\n  }\r\n`\r\n\r\nconst openingTitleStyle = duration => css`\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  left: 50%;\r\n  z-index: 1;\r\n  width: min-content;\r\n  overflow: hidden;\r\n  color: #feda4a;\r\n  line-height: 1;\r\n  text-align: center;\r\n  text-transform: lowercase;\r\n  font-family: 'Starjedi', sans-serif;\r\n  animation: ${openingTitleAnimation} ${duration / 1000}s linear forwards;\r\n`\r\n\r\nexport const StyledOpeningTitle = props => (\r\n  <h1 css={openingTitleStyle(props.duration)} {...props}>\r\n    {props.children}\r\n  </h1>\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledOpeningTitle } from './styles/Title.styles'\r\n\r\nexport const OpeningTitle = ({\r\n  children,\r\n  duration\r\n}) => {\r\n  return (\r\n    <StyledOpeningTitle duration={duration}>\r\n      {children}\r\n    </StyledOpeningTitle>\r\n  )\r\n}\r\n\r\nOpeningTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  duration: PropTypes.number\r\n}\r\n\r\nOpeningTitle.defaultProps = {\r\n  children: 'Star Wars',\r\n  duration: 7500\r\n}\r\n\r\nexport default OpeningTitle\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StyledSkipButton } from './styles/Button.styles'\r\n\r\nexport const SkipButton = props => {\r\n  const { children } = props\r\n\r\n  return (\r\n    <StyledSkipButton\r\n      type='ghost'\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledSkipButton>\r\n  )\r\n}\r\n\r\nSkipButton.propTypes = {\r\n  children: PropTypes.node,\r\n  to: PropTypes.string\r\n}\r\n\r\nSkipButton.defaultProps = {\r\n  children: 'Skip',\r\n  to: '/home'\r\n}\r\n\r\nexport default SkipButton\r\n","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport StarWarsCrawl from '../components/crawl/StarWarsCrawl'\r\nimport OpeningTitle from '../components/title/OpeningTitle'\r\nimport SkipButton from '../components/button/SkipButton'\r\nimport starWarsIntro from '../assets/star-wars-intro.mp3'\r\nimport history from '../routes/history'\r\nimport { RULES } from '../utils/constants'\r\nimport { fetchCharacters } from '../store/characters/actions'\r\n\r\nexport class PublicPage extends Component {\r\n  componentDidMount () {\r\n    this.props.fetchCharacters(1)\r\n    setTimeout(() => history.push('/home'), 27000)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <StarWarsCrawl title='Star Quiz' >\r\n          {RULES.map(rule => <p key={rule}>{rule}</p>)}\r\n        </StarWarsCrawl>\r\n        <iframe src={starWarsIntro} title='autoplay' allow='autoplay' style={{ display: 'none' }} />\r\n        <OpeningTitle>Star Quiz</OpeningTitle>\r\n        <SkipButton />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    fetchCharacters\r\n  }, dispatch)\r\n\r\nexport default connect(null, mapDispatchToProps)(PublicPage)\r\n","import HomePage from '../pages/HomePage'\r\nimport PublicPage from '../pages/PublicPage'\r\n\r\nconst paths = [\r\n  {\r\n    path: '/',\r\n    component: PublicPage,\r\n    default: true\r\n  },\r\n  {\r\n    path: '/home',\r\n    component: HomePage\r\n  }\r\n]\r\n\r\nexport default paths\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport paths from './paths'\r\n\r\nconst Routes = () => {\r\n  const defaultPath = paths.find(path => path.default)\r\n\r\n  const setRoute = route => <Route key={route.path} {...route} exact />\r\n\r\n  const setRedirect = () => <Redirect to={defaultPath.path} />\r\n\r\n  const routes = paths.map(setRoute)\r\n\r\n  return (\r\n    <Switch>\r\n      {routes}\r\n      <Route component={setRedirect} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default withRouter(Routes)\r\n","import React from 'react'\r\nimport { hot } from 'react-hot-loader'\r\nimport { Router } from 'react-router-dom'\r\nimport history from './routes/history'\r\nimport Routes from './routes/Routes'\r\nimport './App.css'\r\n\r\nconst App = () => (\r\n  <Router history={history}>\r\n    <Routes />\r\n  </Router>\r\n)\r\n\r\nexport default hot(module)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/config'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}